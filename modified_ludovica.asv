clear all
clc

%%
Image = load ('CMRIdata.mat'); % this is a struct

Im = Image.vol; % matrix of interest, this is a double

% double Gray scale
cmap = colormap('gray');
montage(Im, cmap) % to see all the slices --> 20 slices
title('double-GrayScale')
colorbar

%% We consider mid_slice 10
Im_d = Im(:,:,10);
Im_int = uint8(Im_d); % one slice 
% we need to convert to uint8 to use the imcrop

figure
subplot(1, 2, 1), imshow(Im_d, [])
subplot(1, 2, 2), imshow(Im_int, []) %brighter

Im_bin = imbinarize(Im_d, 128);


%% cropping one slice 
% we should crop from the slice where the LV is the biggest
[cropped_Im, d] = imcrop(Im_int);
close all

d = round(d); % we save the coords

figure
subplot(1,2,1), imshow(Im_int), title('Original')
subplot(1,2,2), imshow(cropped_Im), title('Cropped')

%% automatic crop of all the slices 
% coordinate

v1 = d(1):d(1)+d(3);
v2 = d(2):d(2)+d(4);

Im_int_cropped = uint8(Im);

figure()
for i = 1:20
    subplot(4, 5, i)
    imshow(Im_int_cropped(v2,v1,i),[])
end

%% Resolution work
close all

FT = fft2(Im_int_cropped);

IFT = ifft2(FT);


figure 
for i = 1:20
    subplot(4, 5, i)
    imshow(Im_int_cropped(v2,v1,i), [])
end
title('Original')

figure 
for i = 1:20
    subplot(4, 5, i)
    imshow(IFT(v2,v1,i), [])
end
title('Reconstructed')

%% make it darker
cropped_Im_d = im2double( Im_int_cropped );    

% max_im_cropped = max(cropped_Im_d(:) );
% min_im_cropped = min( cropped_Im_d(:) );
% 
% LOW_in = min_im_cropped;
% HIGH_in = max_im_cropped;
% 
% LOW_out = 0;
% HIGH_out = 1;

gamma = 5;
        % supposing linear transform
        % mapping input dynamic range into the whole dyamic range as output
        
for i = 1:20
    cropped_Im_modified(v2,v1,i) = imadjust(cropped_Im_d(v2,v1,i), [0 1], [0 1], gamma); % this works better
end

% Show the contrast change related to the adjustment operation

figure 
title('Im double modified gamma = 5')
for i = 1:20
    subplot(4, 5, i)
    imshow(cropped_Im_modified(v2,v1,i), [])
end

%% difference
close all
for i = 1:20
    diff_cropped(v2, v1, i) = cropped_Im_d(v2, v1, i) - cropped_Im_modified(v2, v1, i);
end


figure 
for i = 1:20
    subplot(4, 5, i)
    imshow(diff_cropped(v2,v1,i))
    colorbar
end
title('diff gamma = 4')

%% binarizing
Th = graythresh(diff_cropped); 
Im_BW = imbinarize(diff_cropped,Th);

figure 
for i = 1:20
    subplot(4, 5, i)
    imshow(Im_BW(v2,v1,i), [])
end

%% morphological operation
close all

se = strel('disk',2);
Clo = imclose(Im_BW,se);

figure()
for i = 1:20
    subplot(4, 5, i)
    imshow(Clo(v2,v1,i),[])
end
title('Closing')

% se = strel('disk',1);
% Ero = imerode(Im_BW,se);
% 
% figure()
% for i = 1:20
%     subplot(4, 5, i)
%     imshow(Ero(v2,v1,i),[])
% end
% title('Dilation')

% se = strel('disk',4);
% Op=imclose(Dil,se);
% 
% figure()
% for i = 1:20
%     subplot(4, 5, i)
%     imshow(Op(v2,v1,i),[])
% end
% title('Opening')

%% Circle recognition
imshow(Clo(v2,v1,10))
d = drawline;
pos = d.Position;
diffPos = diff(pos);
diameter = hypot(diffPos(1),diffPos(2));

%%
low = diamet
[centers,radii] = imfindcircles(Clo(v2,v1,10),[diameter-5 diameter+5]);

imshow(Clo(v2,v1,10))
h = viscircles(centers,radii);
